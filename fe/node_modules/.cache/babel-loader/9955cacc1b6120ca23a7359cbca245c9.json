{"ast":null,"code":"var _jsxFileName = \"/Users/hana/seb39_pre_052/fe/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport SocialSignUp from \"./SocialSignUp\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); //유효성검사\n\n  const [isEmail, setIsEmail] = useState(false);\n  const [isPassword, setIsPassword] = useState(false); //빈 상태로 회원가입 버튼 누를 시 empty 메시지\n\n  const [emptyEmailMsg, setEmptyEmailMsg] = useState(\"\");\n  const [emptyPasswordMsg, setEmptyPasswordMsg] = useState(\"\"); //오류메시지 상태저장\n\n  const [emailMessage, setEmailMessage] = useState(\"\");\n  const [passwordMessage, setPasswordMessage] = useState(\"\"); //Sign up 버튼 누르면 POST 요청하기\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newUser = {\n      name: name,\n      email: email,\n      password: password\n    };\n    console.log(newUser);\n\n    if (email.length === 0) {\n      setEmptyEmailMsg(\"Email cannot be empty.\");\n    }\n\n    if (password.length === 0) {\n      setEmptyPasswordMsg(\"Password cannot be empty.\");\n    }\n  }; //유효성 체크 (정규 표현식 사용)\n\n\n  const onChangeEmail = e => {\n    const emailCurrent = e.target.value;\n    setEmail(emailCurrent);\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage(\"not a valid email address\");\n      setIsEmail(false);\n    } else {\n      setEmailMessage(\"\");\n      setIsEmail(true);\n    }\n  };\n\n  const onChangePassword = e => {\n    const passwordCurrent = e.target.value;\n    setPassword(passwordCurrent);\n    const passwordRegex = //   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/; //영문, 숫자, 특수 1자 이상 8자리\n    /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/; //영문, 숫자 1자이상 8자리\n\n    if (!passwordRegex.test(passwordCurrent)) {\n      setPasswordMessage(\"Passwords must contain at least eight characters, including at least 1 letter and 1 number.\");\n      setIsPassword(false);\n    } else {\n      setPasswordMessage(\"\");\n      setIsPassword(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(SocialSignUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form_container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Display name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            required: true,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: email,\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message error\",\n            children: emptyEmailMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 14\n          }, this), email.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `message ${isEmail ? \"success\" : \"error\"}`,\n            children: emailMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), password.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `message ${isPassword ? \"success\" : \"error\"}`,\n            children: passwordMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sign_up_btn\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"cg8MrHs2wQP91mj6LomoOtbT6O8=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["SocialSignUp","useState","SignUp","name","setName","email","setEmail","password","setPassword","isEmail","setIsEmail","isPassword","setIsPassword","emptyEmailMsg","setEmptyEmailMsg","emptyPasswordMsg","setEmptyPasswordMsg","emailMessage","setEmailMessage","passwordMessage","setPasswordMessage","handleSubmit","event","preventDefault","newUser","console","log","length","onChangeEmail","e","emailCurrent","target","value","emailRegex","test","onChangePassword","passwordCurrent","passwordRegex"],"sources":["/Users/hana/seb39_pre_052/fe/src/components/SignUp.js"],"sourcesContent":["import SocialSignUp from \"./SocialSignUp\";\nimport { useState } from \"react\";\n\nconst SignUp = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //유효성검사\n  const [isEmail, setIsEmail] = useState(false);\n  const [isPassword, setIsPassword] = useState(false);\n\n  //빈 상태로 회원가입 버튼 누를 시 empty 메시지\n  const [emptyEmailMsg, setEmptyEmailMsg] = useState(\"\");\n  const [emptyPasswordMsg, setEmptyPasswordMsg] = useState(\"\");\n\n  //오류메시지 상태저장\n  const [emailMessage, setEmailMessage] = useState(\"\");\n  const [passwordMessage, setPasswordMessage] = useState(\"\");\n\n  //Sign up 버튼 누르면 POST 요청하기\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let newUser = { name: name, email: email, password: password };\n    console.log(newUser);\n    if (email.length === 0) {\n      setEmptyEmailMsg(\"Email cannot be empty.\");\n    }\n    if (password.length === 0) {\n      setEmptyPasswordMsg(\"Password cannot be empty.\");\n    }\n  };\n\n  //유효성 체크 (정규 표현식 사용)\n  const onChangeEmail = (e) => {\n    const emailCurrent = e.target.value;\n    setEmail(emailCurrent);\n    const emailRegex =\n      /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage(\"not a valid email address\");\n      setIsEmail(false);\n    } else {\n      setEmailMessage(\"\");\n      setIsEmail(true);\n    }\n  };\n\n  const onChangePassword = (e) => {\n    const passwordCurrent = e.target.value;\n    setPassword(passwordCurrent);\n    const passwordRegex =\n      //   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/; //영문, 숫자, 특수 1자 이상 8자리\n      /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/; //영문, 숫자 1자이상 8자리\n\n    if (!passwordRegex.test(passwordCurrent)) {\n      setPasswordMessage(\n        \"Passwords must contain at least eight characters, including at least 1 letter and 1 number.\"\n      );\n      setIsPassword(false);\n    } else {\n      setPasswordMessage(\"\");\n      setIsPassword(true);\n    }\n  };\n\n  return (\n    <div className=\"signup_wrapper\">\n      {/* 소셜 회원 가입 */}\n      <SocialSignUp></SocialSignUp>\n\n      {/* 일반 회원 가입 */}\n      <section className=\"form_container\">\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>Display name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              required\n              onChange={(e) => setName(e.target.value)}\n            ></input>\n            <p></p>\n          </div>\n          <div>\n            <label>Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={onChangeEmail}\n            ></input>\n            {<p className=\"message error\">{emptyEmailMsg}</p>}\n            {email.length > 0 && (\n              <p className={`message ${isEmail ? \"success\" : \"error\"}`}>\n                {emailMessage}\n              </p>\n            )}\n            {/* 아무것도 안쓰면 Email cannot be empty. 는 어떻게 추가? */}\n          </div>\n          <div>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={onChangePassword}\n            ></input>\n            {password.length > 0 && (\n              <p className={`message ${isPassword ? \"success\" : \"error\"}`}>\n                {passwordMessage}\n              </p>\n            )}\n          </div>\n          <button className=\"sign_up_btn\">Sign up</button>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hana/seb39_pre_052/fe/src/components/LogIn.js\",\n    _s = $RefreshSig$();\n\nimport SocialLogIn from \"./SocialLogIn\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emptyEmailMsg, setEmptyEmailMsg] = useState(\"\"); //Sign up 버튼 누르면 POST 요청하기\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let user = {\n      email: email,\n      password: password\n    };\n    console.log(user);\n\n    if (email === null) {\n      setEmptyEmailMsg(\"email cannot be empty\");\n    }\n  }; //유효성 검사\n  //email, password 빈칸으로 로그인하면 cannot be empty.\n  //데이터에 맞지않는 이메일, pw 입력시 not a valid email address\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(SocialLogIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form_container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: emptyEmailMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: emptyEmailMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"log_in_btn\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogIn, \"1WHP5dWxe+r+TKcJuGaoZ4PkRKc=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["SocialLogIn","useState","LogIn","email","setEmail","password","setPassword","emptyEmailMsg","setEmptyEmailMsg","handleSubmit","event","preventDefault","user","console","log","e","target","value"],"sources":["/Users/hana/seb39_pre_052/fe/src/components/LogIn.js"],"sourcesContent":["import SocialLogIn from \"./SocialLogIn\";\nimport { useState } from \"react\";\n\nconst LogIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emptyEmailMsg, setEmptyEmailMsg] = useState(\"\");\n\n  //Sign up 버튼 누르면 POST 요청하기\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let user = { email: email, password: password };\n    console.log(user);\n    if (email === null) {\n      setEmptyEmailMsg(\"email cannot be empty\");\n    }\n  };\n\n  //유효성 검사\n  //email, password 빈칸으로 로그인하면 cannot be empty.\n  //데이터에 맞지않는 이메일, pw 입력시 not a valid email address\n\n  return (\n    <div className=\"login_wrapper\">\n      {/* 소셜 로그인 */}\n      <SocialLogIn />\n\n      {/* 일반 로그인 */}\n      <section className=\"form_container\">\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            ></input>\n            {<p>{emptyEmailMsg}</p>}\n          </div>\n          <div>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            {<p>{emptyEmailMsg}</p>}\n          </div>\n          <button className=\"log_in_btn\">Log in</button>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default LogIn;\n"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD,CAHkB,CAKlB;;EACA,MAAMQ,YAAY,GAAIC,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;IACA,IAAIC,IAAI,GAAG;MAAET,KAAK,EAAEA,KAAT;MAAgBE,QAAQ,EAAEA;IAA1B,CAAX;IACAQ,OAAO,CAACC,GAAR,CAAYF,IAAZ;;IACA,IAAIT,KAAK,KAAK,IAAd,EAAoB;MAClBK,gBAAgB,CAAC,uBAAD,CAAhB;IACD;EACF,CAPD,CANkB,CAelB;EACA;EACA;;;EAEA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,wBAEE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAS,SAAS,EAAC,gBAAnB;MAAA,uBACE;QAAM,QAAQ,EAAEC,YAAhB;QAAA,wBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YACE,IAAI,EAAC,MADP;YAEE,IAAI,EAAC,OAFP;YAGE,QAAQ,MAHV;YAIE,QAAQ,EAAGM,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;UAJ3B;YAAA;YAAA;YAAA;UAAA,QAFF,eAQG;YAAA,UAAIV;UAAJ;YAAA;YAAA;YAAA;UAAA,QARH;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAWE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YACE,IAAI,EAAC,UADP;YAEE,QAAQ,MAFV;YAGE,QAAQ,EAAGQ,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;UAH9B;YAAA;YAAA;YAAA;UAAA,QAFF,eAOG;YAAA,UAAIV;UAAJ;YAAA;YAAA;YAAA;UAAA,QAPH;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF,eAoBE;UAAQ,SAAS,EAAC,YAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QApBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAnDD;;GAAML,K;;KAAAA,K;AAqDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
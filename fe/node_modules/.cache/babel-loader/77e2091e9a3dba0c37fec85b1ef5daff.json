{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { getDefaultLocale, setDefaultLocale, getLocaleData, addLocaleData } from './LocaleDataStore.js';\nimport resolveLocale from './resolveLocale.js';\nimport PluralRules from './PluralRules.js'; // Importing `PluralRule` polyfill from a separate package\n// results in a bundle that is larger by 1kB for some reason.\n// import PluralRules from 'intl-plural-rules-polyfill/cardinal'\n// Valid time units.\n\nexport var UNITS = [\"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"]; // Valid values for the `numeric` option.\n\nvar NUMERIC_VALUES = [\"auto\", \"always\"]; // Valid values for the `style` option.\n\nvar STYLE_VALUES = [\"long\", \"short\", \"narrow\"]; // Valid values for the `localeMatcher` option.\n\nvar LOCALE_MATCHER_VALUES = [\"lookup\", \"best fit\"];\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\n\nvar RelativeTimeFormat = /*#__PURE__*/function () {\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   */\n  function RelativeTimeFormat() {\n    var locales = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, RelativeTimeFormat);\n\n    var numeric = options.numeric,\n        style = options.style,\n        localeMatcher = options.localeMatcher;\n    this.numeric = \"always\";\n    this.style = \"long\";\n    this.localeMatcher = \"lookup\"; // Set `numeric` option.\n\n    if (numeric !== undefined) {\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\n        throw new RangeError(\"Invalid \\\"numeric\\\" option: \".concat(numeric));\n      }\n\n      this.numeric = numeric;\n    } // Set `style` option.\n\n\n    if (style !== undefined) {\n      if (STYLE_VALUES.indexOf(style) < 0) {\n        throw new RangeError(\"Invalid \\\"style\\\" option: \".concat(style));\n      }\n\n      this.style = style;\n    } // Set `localeMatcher` option.\n\n\n    if (localeMatcher !== undefined) {\n      if (LOCALE_MATCHER_VALUES.indexOf(localeMatcher) < 0) {\n        throw new RangeError(\"Invalid \\\"localeMatcher\\\" option: \".concat(localeMatcher));\n      }\n\n      this.localeMatcher = localeMatcher;\n    } // Set `locale`.\n    // Convert `locales` to an array.\n\n\n    if (typeof locales === 'string') {\n      locales = [locales];\n    } // Add default locale.\n\n\n    locales.push(getDefaultLocale()); // Choose the most appropriate locale.\n\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\n      localeMatcher: this.localeMatcher\n    })[0];\n\n    if (!this.locale) {\n      throw new Error(\"No supported locale was found\");\n    } // Construct an `Intl.PluralRules` instance (polyfill).\n\n\n    if (PluralRules.supportedLocalesOf(this.locale).length > 0) {\n      this.pluralRules = new PluralRules(this.locale);\n    } else {\n      console.warn(\"\\\"\".concat(this.locale, \"\\\" locale is not supported\"));\n    } // Use `Intl.NumberFormat` for formatting numbers (when available).\n\n\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\n      this.numberFormat = new Intl.NumberFormat(this.locale);\n      this.numberingSystem = this.numberFormat.resolvedOptions().numberingSystem;\n    } else {\n      this.numberingSystem = 'latn';\n    }\n\n    this.locale = resolveLocale(this.locale, {\n      localeMatcher: this.localeMatcher\n    });\n  }\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\n\n\n  _createClass(RelativeTimeFormat, [{\n    key: \"format\",\n    value: function format() {\n      var _parseFormatArgs = parseFormatArgs(arguments),\n          _parseFormatArgs2 = _slicedToArray(_parseFormatArgs, 2),\n          number = _parseFormatArgs2[0],\n          unit = _parseFormatArgs2[1];\n\n      return this.getRule(number, unit).replace('{0}', this.formatNumber(Math.abs(number)));\n    }\n    /**\r\n     * Formats time `number` in `units` (either in past or in future).\r\n     * @param {number} number - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {Object[]} The parts (`{ type, value, unit? }`).\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Version 1 (deprecated).\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"day\", value: \"100\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     * //\r\n     * // Version 2.\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     */\n\n  }, {\n    key: \"formatToParts\",\n    value: function formatToParts() {\n      var _parseFormatArgs3 = parseFormatArgs(arguments),\n          _parseFormatArgs4 = _slicedToArray(_parseFormatArgs3, 2),\n          number = _parseFormatArgs4[0],\n          unit = _parseFormatArgs4[1];\n\n      var rule = this.getRule(number, unit);\n      var valueIndex = rule.indexOf(\"{0}\"); // \"yesterday\"/\"today\"/\"tomorrow\".\n\n      if (valueIndex < 0) {\n        return [{\n          type: \"literal\",\n          value: rule\n        }];\n      }\n\n      var parts = [];\n\n      if (valueIndex > 0) {\n        parts.push({\n          type: \"literal\",\n          value: rule.slice(0, valueIndex)\n        });\n      }\n\n      parts = parts.concat(this.formatNumberToParts(Math.abs(number)).map(function (part) {\n        return _objectSpread(_objectSpread({}, part), {}, {\n          unit: unit\n        });\n      }));\n\n      if (valueIndex + \"{0}\".length < rule.length - 1) {\n        parts.push({\n          type: \"literal\",\n          value: rule.slice(valueIndex + \"{0}\".length)\n        });\n      }\n\n      return parts;\n    }\n    /**\r\n     * Returns formatting rule for `value` in `units` (either in past or in future).\r\n     * @param {number} value - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {string}\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Returns \"{0} days ago\"\r\n     * getRule(-2, \"day\")\r\n     */\n\n  }, {\n    key: \"getRule\",\n    value: function getRule(value, unit) {\n      // Get locale-specific time interval formatting rules\n      // of a given `style` for the given value of measurement `unit`.\n      //\n      // E.g.:\n      //\n      // ```json\n      // {\n      //  \"past\": {\n      //    \"one\": \"a second ago\",\n      //    \"other\": \"{0} seconds ago\"\n      //  },\n      //  \"future\": {\n      //    \"one\": \"in a second\",\n      //    \"other\": \"in {0} seconds\"\n      //  }\n      // }\n      // ```\n      //\n      var unitMessages = getLocaleData(this.locale)[this.style][unit]; // Bundle size optimization technique for styles like\n      // \"tiny\" in `javascript-time-ago`: \"1m\", \"2h\", \"3d\"...\n\n      if (typeof unitMessages === 'string') {\n        return unitMessages;\n      } // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\n\n\n      if (this.numeric === \"auto\") {\n        // \"yesterday\", \"the day before yesterday\", etc.\n        if (value === -2 || value === -1) {\n          var message = unitMessages[\"previous\".concat(value === -1 ? '' : '-' + Math.abs(value))];\n\n          if (message) {\n            return message;\n          }\n        } // \"tomorrow\", \"the day after tomorrow\", etc.\n        else if (value === 1 || value === 2) {\n          var _message = unitMessages[\"next\".concat(value === 1 ? '' : '-' + Math.abs(value))];\n\n          if (_message) {\n            return _message;\n          }\n        } // \"today\"\n        else if (value === 0) {\n          if (unitMessages.current) {\n            return unitMessages.current;\n          }\n        }\n      } // Choose either \"past\" or \"future\" based on time `value` sign.\n      // If there's only \"other\" then it's being collapsed.\n      // (the resulting bundle size optimization technique)\n\n\n      var pluralizedMessages = unitMessages[isNegative(value) ? \"past\" : \"future\"]; // Bundle size optimization technique for styles like \"narrow\"\n      // having messages like \"in {0} d.\" or \"{0} d. ago\".\n\n      if (typeof pluralizedMessages === \"string\") {\n        return pluralizedMessages;\n      } // Quantify `value`.\n      // There seems to be no such locale in CLDR\n      // for which \"plural rules\" function is missing.\n\n\n      var quantifier = this.pluralRules && this.pluralRules.select(Math.abs(value)) || 'other'; // \"other\" rule is supposed to be always present.\n      // If only \"other\" rule is present then \"rules\" is not an object and is a string.\n\n      return pluralizedMessages[quantifier] || pluralizedMessages.other;\n    }\n    /**\r\n     * Formats a number into a string.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber(number) {\n      return this.numberFormat ? this.numberFormat.format(number) : String(number);\n    }\n    /**\r\n     * Formats a number into a list of parts.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {object[]}\r\n     */\n\n  }, {\n    key: \"formatNumberToParts\",\n    value: function formatNumberToParts(number) {\n      // `Intl.NumberFormat.formatToParts()` is not present, for example,\n      // in Node.js 8.x while `Intl.NumberFormat` itself is present.\n      return this.numberFormat && this.numberFormat.formatToParts ? this.numberFormat.formatToParts(number) : [{\n        type: \"integer\",\n        value: this.formatNumber(number)\n      }];\n    }\n    /**\r\n     * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"resolvedOptions\",\n    value: function resolvedOptions() {\n      return {\n        locale: this.locale,\n        style: this.style,\n        numeric: this.numeric,\n        numberingSystem: this.numberingSystem\n      };\n    }\n  }]);\n\n  return RelativeTimeFormat;\n}();\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\n\n\nexport { RelativeTimeFormat as default };\n\nRelativeTimeFormat.supportedLocalesOf = function (locales) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Convert `locales` to an array.\n\n  if (typeof locales === 'string') {\n    locales = [locales];\n  } else if (!Array.isArray(locales)) {\n    throw new TypeError('Invalid \"locales\" argument');\n  }\n\n  return locales.filter(function (locale) {\n    return resolveLocale(locale, options);\n  });\n};\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\n\n\nRelativeTimeFormat.addLocale = addLocaleData;\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\n\nRelativeTimeFormat.setDefaultLocale = setDefaultLocale;\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\n\nRelativeTimeFormat.getDefaultLocale = getDefaultLocale;\n/**\r\n * Export `Intl.PluralRules` just in case it's used somewhere else.\r\n */\n\nRelativeTimeFormat.PluralRules = PluralRules; // The specification allows units to be in plural form.\n// Convert plural to singular.\n// Example: \"seconds\" -> \"second\".\n\nvar UNIT_ERROR = 'Invalid \"unit\" argument';\n\nfunction parseUnit(unit) {\n  if (_typeof(unit) === 'symbol') {\n    throw new TypeError(UNIT_ERROR);\n  }\n\n  if (typeof unit !== 'string') {\n    throw new RangeError(\"\".concat(UNIT_ERROR, \": \").concat(unit));\n  }\n\n  if (unit[unit.length - 1] === 's') {\n    unit = unit.slice(0, unit.length - 1);\n  }\n\n  if (UNITS.indexOf(unit) < 0) {\n    throw new RangeError(\"\".concat(UNIT_ERROR, \": \").concat(unit));\n  }\n\n  return unit;\n} // Converts `value` to a `Number`.\n// The specification allows value to be a non-number.\n// For example, \"-0\" is supposed to be treated as `-0`.\n// Also checks if `value` is a finite number.\n\n\nvar NUMBER_ERROR = 'Invalid \"number\" argument';\n\nfunction parseNumber(value) {\n  value = Number(value);\n\n  if (Number.isFinite) {\n    if (!Number.isFinite(value)) {\n      throw new RangeError(\"\".concat(NUMBER_ERROR, \": \").concat(value));\n    }\n  }\n\n  return value;\n}\n/**\r\n * Tells `0` from `-0`.\r\n * https://stackoverflow.com/questions/7223359/are-0-and-0-the-same\r\n * @param  {number} number\r\n * @return {Boolean}\r\n * @example\r\n * isNegativeZero(0); // false\r\n * isNegativeZero(-0); // true\r\n */\n\n\nfunction isNegativeZero(number) {\n  return 1 / number === -Infinity;\n}\n\nfunction isNegative(number) {\n  return number < 0 || number === 0 && isNegativeZero(number);\n}\n\nfunction parseFormatArgs(args) {\n  if (args.length < 2) {\n    throw new TypeError(\"\\\"unit\\\" argument is required\");\n  }\n\n  return [parseNumber(args[0]), parseUnit(args[1])];\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","call","slice","name","Array","from","test","len","arr2","_i","_arr","_n","_d","_s","_e","next","done","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","getDefaultLocale","setDefaultLocale","getLocaleData","addLocaleData","resolveLocale","PluralRules","UNITS","NUMERIC_VALUES","STYLE_VALUES","LOCALE_MATCHER_VALUES","RelativeTimeFormat","locales","undefined","options","numeric","style","localeMatcher","indexOf","RangeError","concat","locale","supportedLocalesOf","Error","pluralRules","console","warn","Intl","NumberFormat","numberFormat","numberingSystem","resolvedOptions","format","_parseFormatArgs","parseFormatArgs","_parseFormatArgs2","number","unit","getRule","replace","formatNumber","Math","abs","formatToParts","_parseFormatArgs3","_parseFormatArgs4","rule","valueIndex","type","parts","formatNumberToParts","map","part","unitMessages","message","_message","current","pluralizedMessages","isNegative","quantifier","select","other","String","default","addLocale","UNIT_ERROR","parseUnit","NUMBER_ERROR","parseNumber","Number","isFinite","isNegativeZero","Infinity","args"],"sources":["/Users/sushee/Desktop/CodeStates/pre-project/seb39_pre_052/node_modules/relative-time-format/modules/RelativeTimeFormat.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { getDefaultLocale, setDefaultLocale, getLocaleData, addLocaleData } from './LocaleDataStore.js';\nimport resolveLocale from './resolveLocale.js';\nimport PluralRules from './PluralRules.js'; // Importing `PluralRule` polyfill from a separate package\n// results in a bundle that is larger by 1kB for some reason.\n// import PluralRules from 'intl-plural-rules-polyfill/cardinal'\n// Valid time units.\n\nexport var UNITS = [\"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"]; // Valid values for the `numeric` option.\n\nvar NUMERIC_VALUES = [\"auto\", \"always\"]; // Valid values for the `style` option.\n\nvar STYLE_VALUES = [\"long\", \"short\", \"narrow\"]; // Valid values for the `localeMatcher` option.\n\nvar LOCALE_MATCHER_VALUES = [\"lookup\", \"best fit\"];\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\n\nvar RelativeTimeFormat = /*#__PURE__*/function () {\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   */\n  function RelativeTimeFormat() {\n    var locales = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, RelativeTimeFormat);\n\n    var numeric = options.numeric,\n        style = options.style,\n        localeMatcher = options.localeMatcher;\n    this.numeric = \"always\";\n    this.style = \"long\";\n    this.localeMatcher = \"lookup\"; // Set `numeric` option.\n\n    if (numeric !== undefined) {\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\n        throw new RangeError(\"Invalid \\\"numeric\\\" option: \".concat(numeric));\n      }\n\n      this.numeric = numeric;\n    } // Set `style` option.\n\n\n    if (style !== undefined) {\n      if (STYLE_VALUES.indexOf(style) < 0) {\n        throw new RangeError(\"Invalid \\\"style\\\" option: \".concat(style));\n      }\n\n      this.style = style;\n    } // Set `localeMatcher` option.\n\n\n    if (localeMatcher !== undefined) {\n      if (LOCALE_MATCHER_VALUES.indexOf(localeMatcher) < 0) {\n        throw new RangeError(\"Invalid \\\"localeMatcher\\\" option: \".concat(localeMatcher));\n      }\n\n      this.localeMatcher = localeMatcher;\n    } // Set `locale`.\n    // Convert `locales` to an array.\n\n\n    if (typeof locales === 'string') {\n      locales = [locales];\n    } // Add default locale.\n\n\n    locales.push(getDefaultLocale()); // Choose the most appropriate locale.\n\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\n      localeMatcher: this.localeMatcher\n    })[0];\n\n    if (!this.locale) {\n      throw new Error(\"No supported locale was found\");\n    } // Construct an `Intl.PluralRules` instance (polyfill).\n\n\n    if (PluralRules.supportedLocalesOf(this.locale).length > 0) {\n      this.pluralRules = new PluralRules(this.locale);\n    } else {\n      console.warn(\"\\\"\".concat(this.locale, \"\\\" locale is not supported\"));\n    } // Use `Intl.NumberFormat` for formatting numbers (when available).\n\n\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\n      this.numberFormat = new Intl.NumberFormat(this.locale);\n      this.numberingSystem = this.numberFormat.resolvedOptions().numberingSystem;\n    } else {\n      this.numberingSystem = 'latn';\n    }\n\n    this.locale = resolveLocale(this.locale, {\n      localeMatcher: this.localeMatcher\n    });\n  }\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\n\n\n  _createClass(RelativeTimeFormat, [{\n    key: \"format\",\n    value: function format() {\n      var _parseFormatArgs = parseFormatArgs(arguments),\n          _parseFormatArgs2 = _slicedToArray(_parseFormatArgs, 2),\n          number = _parseFormatArgs2[0],\n          unit = _parseFormatArgs2[1];\n\n      return this.getRule(number, unit).replace('{0}', this.formatNumber(Math.abs(number)));\n    }\n    /**\r\n     * Formats time `number` in `units` (either in past or in future).\r\n     * @param {number} number - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {Object[]} The parts (`{ type, value, unit? }`).\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Version 1 (deprecated).\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"day\", value: \"100\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     * //\r\n     * // Version 2.\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     */\n\n  }, {\n    key: \"formatToParts\",\n    value: function formatToParts() {\n      var _parseFormatArgs3 = parseFormatArgs(arguments),\n          _parseFormatArgs4 = _slicedToArray(_parseFormatArgs3, 2),\n          number = _parseFormatArgs4[0],\n          unit = _parseFormatArgs4[1];\n\n      var rule = this.getRule(number, unit);\n      var valueIndex = rule.indexOf(\"{0}\"); // \"yesterday\"/\"today\"/\"tomorrow\".\n\n      if (valueIndex < 0) {\n        return [{\n          type: \"literal\",\n          value: rule\n        }];\n      }\n\n      var parts = [];\n\n      if (valueIndex > 0) {\n        parts.push({\n          type: \"literal\",\n          value: rule.slice(0, valueIndex)\n        });\n      }\n\n      parts = parts.concat(this.formatNumberToParts(Math.abs(number)).map(function (part) {\n        return _objectSpread(_objectSpread({}, part), {}, {\n          unit: unit\n        });\n      }));\n\n      if (valueIndex + \"{0}\".length < rule.length - 1) {\n        parts.push({\n          type: \"literal\",\n          value: rule.slice(valueIndex + \"{0}\".length)\n        });\n      }\n\n      return parts;\n    }\n    /**\r\n     * Returns formatting rule for `value` in `units` (either in past or in future).\r\n     * @param {number} value - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {string}\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Returns \"{0} days ago\"\r\n     * getRule(-2, \"day\")\r\n     */\n\n  }, {\n    key: \"getRule\",\n    value: function getRule(value, unit) {\n      // Get locale-specific time interval formatting rules\n      // of a given `style` for the given value of measurement `unit`.\n      //\n      // E.g.:\n      //\n      // ```json\n      // {\n      //  \"past\": {\n      //    \"one\": \"a second ago\",\n      //    \"other\": \"{0} seconds ago\"\n      //  },\n      //  \"future\": {\n      //    \"one\": \"in a second\",\n      //    \"other\": \"in {0} seconds\"\n      //  }\n      // }\n      // ```\n      //\n      var unitMessages = getLocaleData(this.locale)[this.style][unit]; // Bundle size optimization technique for styles like\n      // \"tiny\" in `javascript-time-ago`: \"1m\", \"2h\", \"3d\"...\n\n      if (typeof unitMessages === 'string') {\n        return unitMessages;\n      } // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\n\n\n      if (this.numeric === \"auto\") {\n        // \"yesterday\", \"the day before yesterday\", etc.\n        if (value === -2 || value === -1) {\n          var message = unitMessages[\"previous\".concat(value === -1 ? '' : '-' + Math.abs(value))];\n\n          if (message) {\n            return message;\n          }\n        } // \"tomorrow\", \"the day after tomorrow\", etc.\n        else if (value === 1 || value === 2) {\n          var _message = unitMessages[\"next\".concat(value === 1 ? '' : '-' + Math.abs(value))];\n\n          if (_message) {\n            return _message;\n          }\n        } // \"today\"\n        else if (value === 0) {\n          if (unitMessages.current) {\n            return unitMessages.current;\n          }\n        }\n      } // Choose either \"past\" or \"future\" based on time `value` sign.\n      // If there's only \"other\" then it's being collapsed.\n      // (the resulting bundle size optimization technique)\n\n\n      var pluralizedMessages = unitMessages[isNegative(value) ? \"past\" : \"future\"]; // Bundle size optimization technique for styles like \"narrow\"\n      // having messages like \"in {0} d.\" or \"{0} d. ago\".\n\n      if (typeof pluralizedMessages === \"string\") {\n        return pluralizedMessages;\n      } // Quantify `value`.\n      // There seems to be no such locale in CLDR\n      // for which \"plural rules\" function is missing.\n\n\n      var quantifier = this.pluralRules && this.pluralRules.select(Math.abs(value)) || 'other'; // \"other\" rule is supposed to be always present.\n      // If only \"other\" rule is present then \"rules\" is not an object and is a string.\n\n      return pluralizedMessages[quantifier] || pluralizedMessages.other;\n    }\n    /**\r\n     * Formats a number into a string.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber(number) {\n      return this.numberFormat ? this.numberFormat.format(number) : String(number);\n    }\n    /**\r\n     * Formats a number into a list of parts.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {object[]}\r\n     */\n\n  }, {\n    key: \"formatNumberToParts\",\n    value: function formatNumberToParts(number) {\n      // `Intl.NumberFormat.formatToParts()` is not present, for example,\n      // in Node.js 8.x while `Intl.NumberFormat` itself is present.\n      return this.numberFormat && this.numberFormat.formatToParts ? this.numberFormat.formatToParts(number) : [{\n        type: \"integer\",\n        value: this.formatNumber(number)\n      }];\n    }\n    /**\r\n     * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"resolvedOptions\",\n    value: function resolvedOptions() {\n      return {\n        locale: this.locale,\n        style: this.style,\n        numeric: this.numeric,\n        numberingSystem: this.numberingSystem\n      };\n    }\n  }]);\n\n  return RelativeTimeFormat;\n}();\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\n\n\nexport { RelativeTimeFormat as default };\n\nRelativeTimeFormat.supportedLocalesOf = function (locales) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Convert `locales` to an array.\n  if (typeof locales === 'string') {\n    locales = [locales];\n  } else if (!Array.isArray(locales)) {\n    throw new TypeError('Invalid \"locales\" argument');\n  }\n\n  return locales.filter(function (locale) {\n    return resolveLocale(locale, options);\n  });\n};\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\n\n\nRelativeTimeFormat.addLocale = addLocaleData;\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\n\nRelativeTimeFormat.setDefaultLocale = setDefaultLocale;\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\n\nRelativeTimeFormat.getDefaultLocale = getDefaultLocale;\n/**\r\n * Export `Intl.PluralRules` just in case it's used somewhere else.\r\n */\n\nRelativeTimeFormat.PluralRules = PluralRules; // The specification allows units to be in plural form.\n// Convert plural to singular.\n// Example: \"seconds\" -> \"second\".\n\nvar UNIT_ERROR = 'Invalid \"unit\" argument';\n\nfunction parseUnit(unit) {\n  if (_typeof(unit) === 'symbol') {\n    throw new TypeError(UNIT_ERROR);\n  }\n\n  if (typeof unit !== 'string') {\n    throw new RangeError(\"\".concat(UNIT_ERROR, \": \").concat(unit));\n  }\n\n  if (unit[unit.length - 1] === 's') {\n    unit = unit.slice(0, unit.length - 1);\n  }\n\n  if (UNITS.indexOf(unit) < 0) {\n    throw new RangeError(\"\".concat(UNIT_ERROR, \": \").concat(unit));\n  }\n\n  return unit;\n} // Converts `value` to a `Number`.\n// The specification allows value to be a non-number.\n// For example, \"-0\" is supposed to be treated as `-0`.\n// Also checks if `value` is a finite number.\n\n\nvar NUMBER_ERROR = 'Invalid \"number\" argument';\n\nfunction parseNumber(value) {\n  value = Number(value);\n\n  if (Number.isFinite) {\n    if (!Number.isFinite(value)) {\n      throw new RangeError(\"\".concat(NUMBER_ERROR, \": \").concat(value));\n    }\n  }\n\n  return value;\n}\n/**\r\n * Tells `0` from `-0`.\r\n * https://stackoverflow.com/questions/7223359/are-0-and-0-the-same\r\n * @param  {number} number\r\n * @return {Boolean}\r\n * @example\r\n * isNegativeZero(0); // false\r\n * isNegativeZero(-0); // true\r\n */\n\n\nfunction isNegativeZero(number) {\n  return 1 / number === -Infinity;\n}\n\nfunction isNegative(number) {\n  return number < 0 || number === 0 && isNegativeZero(number);\n}\n\nfunction parseFormatArgs(args) {\n  if (args.length < 2) {\n    throw new TypeError(\"\\\"unit\\\" argument is required\");\n  }\n\n  return [parseNumber(args[0]), parseUnit(args[1])];\n}\n//# sourceMappingURL=RelativeTimeFormat.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module"}
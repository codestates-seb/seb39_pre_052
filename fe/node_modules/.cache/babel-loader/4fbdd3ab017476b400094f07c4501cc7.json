{"ast":null,"code":"export function getRoundFunction(round) {\n  switch (round) {\n    case 'floor':\n      return Math.floor;\n\n    default:\n      return Math.round;\n  }\n} // For non-negative numbers.\n\nexport function getDiffRatioToNextRoundedNumber(round) {\n  switch (round) {\n    case 'floor':\n      // Math.floor(x) = x\n      // Math.floor(x + 1) = x + 1\n      return 1;\n\n    default:\n      // Math.round(x) = x\n      // Math.round(x + 0.5) = x + 1\n      return 0.5;\n  }\n}","map":{"version":3,"names":["getRoundFunction","round","Math","floor","getDiffRatioToNextRoundedNumber"],"sources":["/Users/sushee/Desktop/CodeStates/pre-project/seb39_pre_052/node_modules/javascript-time-ago/modules/round.js"],"sourcesContent":["export function getRoundFunction(round) {\n  switch (round) {\n    case 'floor':\n      return Math.floor;\n\n    default:\n      return Math.round;\n  }\n} // For non-negative numbers.\n\nexport function getDiffRatioToNextRoundedNumber(round) {\n  switch (round) {\n    case 'floor':\n      // Math.floor(x) = x\n      // Math.floor(x + 1) = x + 1\n      return 1;\n\n    default:\n      // Math.round(x) = x\n      // Math.round(x + 0.5) = x + 1\n      return 0.5;\n  }\n}\n//# sourceMappingURL=round.js.map"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;EACtC,QAAQA,KAAR;IACE,KAAK,OAAL;MACE,OAAOC,IAAI,CAACC,KAAZ;;IAEF;MACE,OAAOD,IAAI,CAACD,KAAZ;EALJ;AAOD,C,CAAC;;AAEF,OAAO,SAASG,+BAAT,CAAyCH,KAAzC,EAAgD;EACrD,QAAQA,KAAR;IACE,KAAK,OAAL;MACE;MACA;MACA,OAAO,CAAP;;IAEF;MACE;MACA;MACA,OAAO,GAAP;EATJ;AAWD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { minute, hour, day, week, month, year } from './units.js'; // \"factor\" is a legacy property.\n// Developers shouldn't need to use it in their custom steps.\n// \"threshold\" is a legacy name of \"min\".\n// Developers should use \"min\" property name instead of \"threshold\".\n// \"threshold_for_idOrUnit: value\" is a legacy way of specifying \"min: { id: value }\".\n// Developers should use \"min\" property instead of \"threshold\".\n// just now\n// 1 minute ago\n// 2 minutes ago\n// 5 minutes ago\n// 10 minutes ago\n// 15 minutes ago\n// 20 minutes ago\n// …\n// 50 minutes ago\n// an hour ago\n// 2 hours ago\n// …\n// 20 hours ago\n// a day ago\n// 2 days ago\n// 5 days ago\n// a week ago\n// 2 weeks ago\n// 3 weeks ago\n// a month ago\n// 2 months ago\n// 4 months ago\n// a year ago\n// 2 years ago\n// …\n\nexport default [{\n  // This step returns the amount of seconds\n  // by dividing the amount of seconds by `1`.\n  factor: 1,\n  // \"now\" labels are used for formatting the output.\n  unit: 'now'\n}, {\n  // When the language doesn't support `now` unit,\n  // the first step is ignored, and it uses this `second` unit.\n  threshold: 1,\n  // `threshold_for_now` should be the same as `threshold` on minutes.\n  threshold_for_now: 45.5,\n  // This step returns the amount of seconds\n  // by dividing the amount of seconds by `1`.\n  factor: 1,\n  // \"second\" labels are used for formatting the output.\n  unit: 'second'\n}, {\n  // `threshold` should be the same as `threshold_for_now` on seconds.\n  threshold: 45.5,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a minute.\n  factor: minute,\n  // \"minute\" labels are used for formatting the output.\n  unit: 'minute'\n}, {\n  // This step is effective starting from 2.5 minutes.\n  threshold: 2.5 * minute,\n  // Allow only 5-minute increments of minutes starting from 2.5 minutes.\n  // `granularity` — (advanced) Time interval value \"granularity\".\n  // For example, it could be set to `5` for minutes to allow only 5-minute increments\n  // when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\n  // Perhaps this feature will be removed because there seem to be no use cases\n  // of it in the real world.\n  granularity: 5,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a minute.\n  factor: minute,\n  // \"minute\" labels are used for formatting the output.\n  unit: 'minute'\n}, {\n  // This step is effective starting from 22.5 minutes.\n  threshold: 22.5 * minute,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in  half-an-hour.\n  factor: 0.5 * hour,\n  // \"half-hour\" labels are used for formatting the output.\n  // (if available, which is no longer the case)\n  unit: 'half-hour'\n}, {\n  // This step is effective starting from 42.5 minutes.\n  threshold: 42.5 * minute,\n  threshold_for_minute: 52.5 * minute,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in an hour.\n  factor: hour,\n  // \"hour\" labels are used for formatting the output.\n  unit: 'hour'\n}, {\n  // This step is effective starting from 20.5 hours.\n  threshold: 20.5 / 24 * day,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a day.\n  factor: day,\n  // \"day\" labels are used for formatting the output.\n  unit: 'day'\n}, {\n  // This step is effective starting from 5.5 days.\n  threshold: 5.5 * day,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a week.\n  factor: week,\n  // \"week\" labels are used for formatting the output.\n  unit: 'week'\n}, {\n  // This step is effective starting from 3.5 weeks.\n  threshold: 3.5 * week,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a month.\n  factor: month,\n  // \"month\" labels are used for formatting the output.\n  unit: 'month'\n}, {\n  // This step is effective starting from 10.5 months.\n  threshold: 10.5 * month,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a year.\n  factor: year,\n  // \"year\" labels are used for formatting the output.\n  unit: 'year'\n}];","map":{"version":3,"names":["minute","hour","day","week","month","year","factor","unit","threshold","threshold_for_now","granularity","threshold_for_minute"],"sources":["/Users/sushee/Desktop/CodeStates/pre-project/seb39_pre_052/node_modules/javascript-time-ago/modules/steps/approximate.js"],"sourcesContent":["import { minute, hour, day, week, month, year } from './units.js'; // \"factor\" is a legacy property.\n// Developers shouldn't need to use it in their custom steps.\n// \"threshold\" is a legacy name of \"min\".\n// Developers should use \"min\" property name instead of \"threshold\".\n// \"threshold_for_idOrUnit: value\" is a legacy way of specifying \"min: { id: value }\".\n// Developers should use \"min\" property instead of \"threshold\".\n// just now\n// 1 minute ago\n// 2 minutes ago\n// 5 minutes ago\n// 10 minutes ago\n// 15 minutes ago\n// 20 minutes ago\n// …\n// 50 minutes ago\n// an hour ago\n// 2 hours ago\n// …\n// 20 hours ago\n// a day ago\n// 2 days ago\n// 5 days ago\n// a week ago\n// 2 weeks ago\n// 3 weeks ago\n// a month ago\n// 2 months ago\n// 4 months ago\n// a year ago\n// 2 years ago\n// …\n\nexport default [{\n  // This step returns the amount of seconds\n  // by dividing the amount of seconds by `1`.\n  factor: 1,\n  // \"now\" labels are used for formatting the output.\n  unit: 'now'\n}, {\n  // When the language doesn't support `now` unit,\n  // the first step is ignored, and it uses this `second` unit.\n  threshold: 1,\n  // `threshold_for_now` should be the same as `threshold` on minutes.\n  threshold_for_now: 45.5,\n  // This step returns the amount of seconds\n  // by dividing the amount of seconds by `1`.\n  factor: 1,\n  // \"second\" labels are used for formatting the output.\n  unit: 'second'\n}, {\n  // `threshold` should be the same as `threshold_for_now` on seconds.\n  threshold: 45.5,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a minute.\n  factor: minute,\n  // \"minute\" labels are used for formatting the output.\n  unit: 'minute'\n}, {\n  // This step is effective starting from 2.5 minutes.\n  threshold: 2.5 * minute,\n  // Allow only 5-minute increments of minutes starting from 2.5 minutes.\n  // `granularity` — (advanced) Time interval value \"granularity\".\n  // For example, it could be set to `5` for minutes to allow only 5-minute increments\n  // when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\n  // Perhaps this feature will be removed because there seem to be no use cases\n  // of it in the real world.\n  granularity: 5,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a minute.\n  factor: minute,\n  // \"minute\" labels are used for formatting the output.\n  unit: 'minute'\n}, {\n  // This step is effective starting from 22.5 minutes.\n  threshold: 22.5 * minute,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in  half-an-hour.\n  factor: 0.5 * hour,\n  // \"half-hour\" labels are used for formatting the output.\n  // (if available, which is no longer the case)\n  unit: 'half-hour'\n}, {\n  // This step is effective starting from 42.5 minutes.\n  threshold: 42.5 * minute,\n  threshold_for_minute: 52.5 * minute,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in an hour.\n  factor: hour,\n  // \"hour\" labels are used for formatting the output.\n  unit: 'hour'\n}, {\n  // This step is effective starting from 20.5 hours.\n  threshold: 20.5 / 24 * day,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a day.\n  factor: day,\n  // \"day\" labels are used for formatting the output.\n  unit: 'day'\n}, {\n  // This step is effective starting from 5.5 days.\n  threshold: 5.5 * day,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a week.\n  factor: week,\n  // \"week\" labels are used for formatting the output.\n  unit: 'week'\n}, {\n  // This step is effective starting from 3.5 weeks.\n  threshold: 3.5 * week,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a month.\n  factor: month,\n  // \"month\" labels are used for formatting the output.\n  unit: 'month'\n}, {\n  // This step is effective starting from 10.5 months.\n  threshold: 10.5 * month,\n  // Return the amount of minutes by dividing the amount\n  // of seconds by the amount of seconds in a year.\n  factor: year,\n  // \"year\" labels are used for formatting the output.\n  unit: 'year'\n}];\n//# sourceMappingURL=approximate.js.map"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,YAArD,C,CAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,CAAC;EACd;EACA;EACAC,MAAM,EAAE,CAHM;EAId;EACAC,IAAI,EAAE;AALQ,CAAD,EAMZ;EACD;EACA;EACAC,SAAS,EAAE,CAHV;EAID;EACAC,iBAAiB,EAAE,IALlB;EAMD;EACA;EACAH,MAAM,EAAE,CARP;EASD;EACAC,IAAI,EAAE;AAVL,CANY,EAiBZ;EACD;EACAC,SAAS,EAAE,IAFV;EAGD;EACA;EACAF,MAAM,EAAEN,MALP;EAMD;EACAO,IAAI,EAAE;AAPL,CAjBY,EAyBZ;EACD;EACAC,SAAS,EAAE,MAAMR,MAFhB;EAGD;EACA;EACA;EACA;EACA;EACA;EACAU,WAAW,EAAE,CATZ;EAUD;EACA;EACAJ,MAAM,EAAEN,MAZP;EAaD;EACAO,IAAI,EAAE;AAdL,CAzBY,EAwCZ;EACD;EACAC,SAAS,EAAE,OAAOR,MAFjB;EAGD;EACA;EACAM,MAAM,EAAE,MAAML,IALb;EAMD;EACA;EACAM,IAAI,EAAE;AARL,CAxCY,EAiDZ;EACD;EACAC,SAAS,EAAE,OAAOR,MAFjB;EAGDW,oBAAoB,EAAE,OAAOX,MAH5B;EAID;EACA;EACAM,MAAM,EAAEL,IANP;EAOD;EACAM,IAAI,EAAE;AARL,CAjDY,EA0DZ;EACD;EACAC,SAAS,EAAE,OAAO,EAAP,GAAYN,GAFtB;EAGD;EACA;EACAI,MAAM,EAAEJ,GALP;EAMD;EACAK,IAAI,EAAE;AAPL,CA1DY,EAkEZ;EACD;EACAC,SAAS,EAAE,MAAMN,GAFhB;EAGD;EACA;EACAI,MAAM,EAAEH,IALP;EAMD;EACAI,IAAI,EAAE;AAPL,CAlEY,EA0EZ;EACD;EACAC,SAAS,EAAE,MAAML,IAFhB;EAGD;EACA;EACAG,MAAM,EAAEF,KALP;EAMD;EACAG,IAAI,EAAE;AAPL,CA1EY,EAkFZ;EACD;EACAC,SAAS,EAAE,OAAOJ,KAFjB;EAGD;EACA;EACAE,MAAM,EAAED,IALP;EAMD;EACAE,IAAI,EAAE;AAPL,CAlFY,CAAf"},"metadata":{},"sourceType":"module"}
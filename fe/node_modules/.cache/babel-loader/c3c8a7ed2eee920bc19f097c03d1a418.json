{"ast":null,"code":"/**\r\n * Returns a `locale` for which a function exists in `./PluralRuleFunctions.js`.\r\n * @param  {string} locale\r\n * @return {string}\r\n * @example\r\n * getPluralRulesLocale(\"ru-RU-Cyrl\") // Returns \"ru\".\r\n */\nexport default function getPluralRulesLocale(locale) {\n  // \"pt\" language is the only one having different pluralization rules\n  // for the one (\"pt\") (Portuguese) locale and the other (\"pt-PT\") (European Portuguese).\n  // http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\n  // (see the entries for \"pt\" and \"pt_PT\" there)\n  if (locale === 'pt-PT') {\n    return locale;\n  }\n\n  return getLanguageFromLanguageTag(locale);\n}\n/**\r\n * Extracts language from an IETF BCP 47 language tag.\r\n * @param {string} languageTag - IETF BCP 47 language tag.\r\n * @return {string}\r\n * @example\r\n * // Returns \"he\"\r\n * getLanguageFromLanguageTag(\"he-IL-u-ca-hebrew-tz-jeruslm\")\r\n * // Returns \"ar\"\r\n * getLanguageFromLanguageTag(\"ar-u-nu-latn\")\r\n */\n\nvar LANGUAGE_REG_EXP = /^([a-z0-9]+)/i;\n\nfunction getLanguageFromLanguageTag(languageTag) {\n  var match = languageTag.match(LANGUAGE_REG_EXP);\n\n  if (!match) {\n    throw new TypeError(\"Invalid locale: \".concat(languageTag));\n  }\n\n  return match[1];\n}","map":{"version":3,"names":["getPluralRulesLocale","locale","getLanguageFromLanguageTag","LANGUAGE_REG_EXP","languageTag","match","TypeError","concat"],"sources":["/Users/sushee/Desktop/CodeStates/pre-project/seb39_pre_052/node_modules/relative-time-format/modules/getPluralRulesLocale.js"],"sourcesContent":["/**\r\n * Returns a `locale` for which a function exists in `./PluralRuleFunctions.js`.\r\n * @param  {string} locale\r\n * @return {string}\r\n * @example\r\n * getPluralRulesLocale(\"ru-RU-Cyrl\") // Returns \"ru\".\r\n */\nexport default function getPluralRulesLocale(locale) {\n  // \"pt\" language is the only one having different pluralization rules\n  // for the one (\"pt\") (Portuguese) locale and the other (\"pt-PT\") (European Portuguese).\n  // http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\n  // (see the entries for \"pt\" and \"pt_PT\" there)\n  if (locale === 'pt-PT') {\n    return locale;\n  }\n\n  return getLanguageFromLanguageTag(locale);\n}\n/**\r\n * Extracts language from an IETF BCP 47 language tag.\r\n * @param {string} languageTag - IETF BCP 47 language tag.\r\n * @return {string}\r\n * @example\r\n * // Returns \"he\"\r\n * getLanguageFromLanguageTag(\"he-IL-u-ca-hebrew-tz-jeruslm\")\r\n * // Returns \"ar\"\r\n * getLanguageFromLanguageTag(\"ar-u-nu-latn\")\r\n */\n\nvar LANGUAGE_REG_EXP = /^([a-z0-9]+)/i;\n\nfunction getLanguageFromLanguageTag(languageTag) {\n  var match = languageTag.match(LANGUAGE_REG_EXP);\n\n  if (!match) {\n    throw new TypeError(\"Invalid locale: \".concat(languageTag));\n  }\n\n  return match[1];\n}\n//# sourceMappingURL=getPluralRulesLocale.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,oBAAT,CAA8BC,MAA9B,EAAsC;EACnD;EACA;EACA;EACA;EACA,IAAIA,MAAM,KAAK,OAAf,EAAwB;IACtB,OAAOA,MAAP;EACD;;EAED,OAAOC,0BAA0B,CAACD,MAAD,CAAjC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIE,gBAAgB,GAAG,eAAvB;;AAEA,SAASD,0BAAT,CAAoCE,WAApC,EAAiD;EAC/C,IAAIC,KAAK,GAAGD,WAAW,CAACC,KAAZ,CAAkBF,gBAAlB,CAAZ;;EAEA,IAAI,CAACE,KAAL,EAAY;IACV,MAAM,IAAIC,SAAJ,CAAc,mBAAmBC,MAAnB,CAA0BH,WAA1B,CAAd,CAAN;EACD;;EAED,OAAOC,KAAK,CAAC,CAAD,CAAZ;AACD"},"metadata":{},"sourceType":"module"}